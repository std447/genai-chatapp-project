# .github/workflows/deploy-worker.yml
name: Deploy Backend Worker

on:
  push:
    branches:
      - main
      - development
      - 'feat/**'
  pull_request: 
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Determine Backend Deployment Trigger
        id: check_paths
        run: |
          CURRENT_BRANCH="${{ github.ref_name }}"
          
          if [[ "$CURRENT_BRANCH" == "main" ]]; then
            echo "Checking for backend/shared changes on production branch ($CURRENT_BRANCH)..."
            CHANGES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E "^backend/cloudflare-worker/|^shared/types/" || true)
            
            if [[ -n "$CHANGES" ]]; then
              echo "deploy_backend=true" >> "$GITHUB_OUTPUT"
              echo "::notice file=.github/workflows/deploy-worker.yml::Detected backend or shared changes on $CURRENT_BRANCH. Deploying backend."
            else
              echo "deploy_backend=false" >> "$GITHUB_OUTPUT"
              echo "::notice file=.github/workflows/deploy-worker.yml::No backend or shared changes on $CURRENT_BRANCH. Skipping backend deployment."
            fi
          else
            echo "deploy_backend=true" >> "$GITHUB_OUTPUT"
            echo "::notice file=.github/workflows/deploy-worker.yml::Deploying backend for preview branch $CURRENT_BRANCH to ensure synchronization."
          fi

      - name: Install backend dependencies
        if: steps.check_paths.outputs.deploy_backend == 'true'
        run: npm install
        working-directory: ./backend/cloudflare-worker

      - name: Deploy Worker
        if: steps.check_paths.outputs.deploy_backend == 'true'
        run: |
          # Simply run npx wrangler deploy.
          # This relies on your backend/cloudflare-worker/wrangler.jsonc
          # to correctly define the Worker's name, routing, and how preview
          # deployments (e.g., hash-prefixed URLs) are handled for your
          # 'genai-chatapp' application/environment.
          echo "Running npx wrangler deploy. Configuration is expected from wrangler.jsonc."
          npx wrangler deploy
          
        working-directory: ./backend/cloudflare-worker
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
